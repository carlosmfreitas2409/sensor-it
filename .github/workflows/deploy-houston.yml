name: "[Houston] Deploy"

on:
  workflow_call:
    secrets:
      TURBO_TOKEN:
        required: true
      TURBO_TEAM:
        required: true
      MACHINE_IDENTITY_CLIENT_ID:
        required: true
      MACHINE_IDENTITY_CLIENT_SECRET:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      SSH_KEY:
        required: true
      SSH_PORT:
        required: true

jobs:
  check:
    name: Check app changed
    uses: ./.github/workflows/app-changed.yml
    with:
      app: "@sensor-it/houston"

  deploy:
    needs: check
    if: ${{ needs.check.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' }}
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun houston build
      - name: Export secrets to env file
        uses: Infisical/secrets-action@v1.0.7
        with:
          client-id: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
          env-slug: "prod"
          project-slug: "sensor-it-ch6j"
          export-type: "file"
      - name: Run migration
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
        run: bun houston db:migrate
      - name: Copy executable to AWS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "apps/houston/dist/,.env"
          target: "app/houston"
          strip_components: 3
      # - name: Restart PM2 process
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: pm2 restart sensor-it_api